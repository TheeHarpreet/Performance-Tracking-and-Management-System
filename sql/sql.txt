/*
The database is called "performance-tracker".
Each role has 5 accounts. There's a pattern, just check the data once you've put it all into the database.
*/

CREATE TABLE If Not Exists users (
    userID int NOT NULL AUTO_INCREMENT,
    fname text NOT NULL,
    lname text NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    jobRole text NOT NULL,
    PRIMARY KEY (userID)
);

CREATE TABLE If Not Exists submission (
    submissionID int NOT NULL AUTO_INCREMENT,
    title text NOT NULL,
    author int NOT NULL,
    dateSubmitted datetime NOT NULL,
    sectionID int NOT NULL,
    comments text NOT NULL,
    submitted boolean NOT NULL,
    approved int NOT NULL DEFAULT 0,
    PRIMARY KEY (submissionID),
    FOREIGN KEY (sectionID) REFERENCES sections (sectionID),
    FOREIGN KEY (author) REFERENCES users (userID)
);

CREATE TABLE If Not Exists submissionReturn (
    submissionID int NOT NULL,
    returnDate datetime NOT NULL DEFAULT NOW(),
    returner int NOT NULL,
    comments text NOT NULL,
    FOREIGN KEY (submissionID) REFERENCES submission (submissionID),
    FOREIGN KEY (returner) REFERENCES users (userID)
);

CREATE TABLE If Not Exists file (
    fileID int NOT NULL AUTO_INCREMENT,
    fileType text NOT NULL,
    name text NOT NULL,
    author int NOT NULL,
    PRIMARY KEY (fileID),
    FOREIGN KEY (author) REFERENCES users (userID) 
);

CREATE TABLE If Not Exists submissionCoauthor (
    submissionID int NOT NULL,
    coauthor int NOT NULL,
    FOREIGN KEY (submissionID) REFERENCES submission (submissionID),
    FOREIGN KEY (coauthor) REFERENCES users (userID)
);

CREATE TABLE If Not Exists submissionFile (
    submissionID int NOT NULL,
    fileID INT NOT NULL,
    FOREIGN KEY (submissionID) REFERENCES submission (submissionID),
    FOREIGN KEY (fileID) REFERENCES file (fileID)
);

CREATE TABLE If Not Exists researchersSupervisor (
    researcherID int NOT NULL,
    supervisorID int NOT NULL,
    FOREIGN KEY (researcherID) REFERENCES users (userID),
    FOREIGN KEY (supervisorID) REFERENCES users (userID)
);

CREATE TABLE If Not Exists sections (
    sectionID INT NOT NULL,
    sectionName text NOT NULL,
    minPoints int NOT NULL,
    maxPoints int NOT NULL,
    minRange int NOT NULL,
    maxRange int NOT NULL,
    PRIMARY KEY (sectionID)
);

INSERT INTO Sections (sectionID, sectionName, minPoints, maxPoints, minRange, maxRange) VALUES
(1, "Personal Particulars", 1, 2, 0, 0),
(2, "Professional Achievements", 6, 8, 0, 0),
(3, "Research And Development", 14, 16, 0, 0),
(4, "Professional Consultations", 5, 7, 0, 0),
(5, "Research Outcomes", 8, 10, 0, 0),
(6, "Professional Recognition", 5, 7, 0, 0),
(7, "Service To Community", 3, 5, 0, 0);